// Grid

.container {
  margin: 0 auto;
  max-width: $container-width;
  padding: 1rem;
  position: relative;
  width: 100%;
  box-sizing: border-box;
}

.container--full {
  max-width: none;
  padding: 0;
}

// Column
// .col {
//   width: 100%;
//   float: left;
//   box-sizing: border-box;
// }

// // For devices larger than 400px
// @media (#{$bp-larger-than-mobile}) {
//   .container {
//     width: $container-width-larger-than-mobile;
//     padding: 0;
//   }
// }

// // For devices larger than 550px
// @media (#{$bp-larger-than-phablet}) {
//   .container {
//     width: $container-width-larger-than-phablet;
//   }
//   .col {
//     margin-left: $column-margin;

//     &:first-child {
//       margin-left: 0;
//     }
//   }

//   .col--1               { width: grid-column-width(1);  }
//   .col--2               { width: grid-column-width(2);  }
//   .col--3               { width: grid-column-width(3);  }
//   .col--4               { width: grid-column-width(4);  }
//   .col--5               { width: grid-column-width(5);  }
//   .col--6               { width: grid-column-width(6);  }
//   .col--7               { width: grid-column-width(7);  }
//   .col--8               { width: grid-column-width(8);  }
//   .col--9               { width: grid-column-width(9);  }
//   .col--10              { width: grid-column-width(10); }
//   .col--11              { width: grid-column-width(11); }
//   .col--12              { width: 100%; margin-left: 0;  }
//  // Shortcut  Offsets: 1/3, 2/3, 1/2
//   .col--1-3             { width: grid-column-width(4);  }
//   .col--2-3             { width: grid-column-width(8);  }
//   .col--1-2             { width: grid-column-width(6);  }


//   // Offsets
//   .col--offset-1         { margin-left: grid-offset-length(1) !important;  }
//   .col--offset-2         { margin-left: grid-offset-length(2) !important;  }
//   .col--offset-3         { margin-left: grid-offset-length(3) !important;  }
//   .col--offset-4         { margin-left: grid-offset-length(4) !important;  }
//   .col--offset-5         { margin-left: grid-offset-length(5) !important;  }
//   .col--offset-6         { margin-left: grid-offset-length(6) !important;  }
//   .col--offset-7         { margin-left: grid-offset-length(7) !important;  }
//   .col--offset-8         { margin-left: grid-offset-length(8) !important;  }
//   .col--offset-9         { margin-left: grid-offset-length(9) !important;  }
//   .col--offset-10        { margin-left: grid-offset-length(10) !important; }
//   .col--offset-11        { margin-left: grid-offset-length(11) !important; }
//  // Shortcut  Offsets: 1/3, 2/3, 1/2
//   .col--offset-1-3       { margin-left: grid-offset-length(4) !important;  }
//   .col--offset-2-3       { margin-left: grid-offset-length(8) !important;  }
//   .col--offset-1-2       {  margin-left: grid-offset-length(6) !important;  }
// }

// Clearing
//––––––––––––––––––––––––––––––––––––––––––––––––––

/* Self Clearing Goodness */
.container:after,
.row:after {
  clear: both;
  content: "";
  display: table;
}


/*

Grid

This is a grid made using flexbox. Use the ff classes to setup a flexbox grid:

.flex-grid               - Grid is always shown, even in small screens

// Modifier classes for `.flex-grid`.
// Use these classes to set the screen width when the grid is visible.

// Grid Modifiers
.flex-grid--md           - Grid starts at medium sized screens
.flex-grid--lg           - Grid starts at large and up screens


Use `.flex-grid__col` to define a column inside a `.flex-grid` grid.
Direct children of `.flex-grid` are columns with the class,
`.flex-grid__col`

Markup:
<div class="demo-grid">
  <div class="flex-grid">
    <div class="flex-grid__col">Cell 1</div>
    <div class="flex-grid__col">Cell 2</div>
    <div class="flex-grid__col">Cell 3</div>
  </div>
  <div class="flex-grid flex-grid--md">
    <div class="flex-grid__col flex-grid__col--sm">Half-width column</div>
    <div class="flex-grid__col">Default width column</div>

  </div>
  <div class="flex-grid flex-grid--md">
    <div class="flex-grid__col flex-grid__col--fixed-width">Cell 1</div>
    <div class="flex-grid__col">Cell 2</div>
  </div>
  <div class="flex-grid flex-grid--lg">
    <div class="flex-grid__col flex-grid__col--lg">Double-width column</div>
    <div class="flex-grid__col">Default width column</div>
  </div>
</div>

// Column modifiers

.flex-grid__col--sm           - half the width of default column
.flex-grid__col--lg           - double the width of default column
.flex-grid__col--fixed-width  - fixed-width column (default = 200px)
*/

// row
.grid {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

//default column width
.grid__col {
  flex: 1;
  flex-basis: 100%;
  flex-grow: 4;
  // margin-left: $flex-grid--column-margin;
}
@media (#{$bp-larger-than-mobile}) {
  .grid__col {
    flex-basis: 33.333%;;
  }
}